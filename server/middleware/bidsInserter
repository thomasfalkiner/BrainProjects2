const path = require('path');
const { Subjects, Sessions, Runs, MEG } = require('../models');

async function insertFromFileMetadata({ path: filePath, file, meta }) {
  const { subjectNumber, sessionNumber, location } = meta;

  // Create or find the subject
  const [subject] = await Subjects.findOrCreate({ where: { subjectNumber } });

  // Create or find the session
  let [session] = await Sessions.findOrCreate({
    where: { subjectId: subject.subjectId, sessionNumber },
    defaults: { location },
  });

  // Update location if needed
  if (!session.location && location) {
    session.location = location;
    await session.save();
  }

  const filename = path.basename(filePath).toLowerCase();

  // Save special session files (e.g., coordsystem, photo, headshape, scans)
  if (filename.includes('coordsystem')) session.coordsystem = file.buffer;
  if (filename.includes('photo')) session.photo = file.buffer;
  if (filename.includes('headshape')) session.headshape = file.buffer;
  if (filename.includes('scans')) session.scans = file.buffer;
  await session.save();

  // Insert Run if 'run-0X' is present in the file path
  const runMatch = filePath.match(/run-(\d+)/);
  const taskMatch = filePath.match(/task-([^_]+)_run/);
  if (runMatch) {
    const runNumber = runMatch[1];

    const taskType = taskMatch ? taskMatch[1] : null;
    console.log("TEST")
    console.log(taskMatch)
    const [run] = await Runs.findOrCreate({
      where: { sessionId: session.sessionId, runNumber },
    });

    // Insert MEG
    const ext = path.extname(filePath).slice(1);
    await MEG.create({
      runId: run.runId,
      filename: path.basename(filePath),
      filetype: ext,
      filepath: filePath,
      taskType: taskType
    });
  }
}

module.exports = { insertFromFileMetadata };